###########################################################################################################################
#
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
#
###########################################################################################################################

###########################################################################################################################
#    PRINT_START
###########################################################################################################################
# %.2f = floating point
# %.2i = signed integer, i or d ?
# %s = string
[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
#   use the following in slicer to pass variables
#   PRINT_START BED=[first_layer_bed_temperature] HOTEND={first_layer_temperature[initial_extruder]+extruder_temperature_offset[initial_extruder]} CHAMBER=[chamber_temperature] SIZE={first_layer_print_min[0]}_{first_layer_print_min[1]}_{first_layer_print_max[0]}_{first_layer_print_max[1]}
gcode:
#####
#set slicer parameters
#####
    {% set BED = params.BED|default(110)|int %}
    {% set EXTRUDER = params.EXTRUDER|default(245)|int %}
    {% set CHAMBER = params.CHAMBER|default(45)|int %}
#    {% set FL_SIZE = params.SIZE|default("0_0_0_0")|string %}
#    {% set Z_ADJUST = params.Z_ADJUST|default(0.0)|float %}
#    {% set filament = params.FILAMENT|default("UNKNOWN")|string %}
    {% set material = params.MATERIAL|default("UNKNOWN")|string %}
    {% set nozzle = params.NOZZLE|default(0.4)|float|round(2) %}
#####
#Display all variables above
#####
    {action_respond_info("Print_Start Macro Inputs:\n"
                         "BED = %i\n"  
                         "EXTRUDER = %d\n" 
                         "CHAMBER = %i\n"  
#                         "FL_SIZE = %s\n"
                         "material = %s\n" 
#                         "Z_Adjust = %.3f\n" 
                         "nozzle = %.2f\n"
#                         "filament = %s\n" % 
                         (BED, EXTRUDER, CHAMBER, material, nozzle))}  
#####
#intial condition to clear or calculate
#####
    M117 Starting...
    M118 Starting...
    STATUS_READY
    BED_MESH_CLEAR                                                  ;clear the previous bed mesh
    SET_PIN PIN=caselight VALUE=1                                   ;turn the case lights on
#    RESETRGB                                                        ;reset the RGB lights on the display
#    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0             ;enable the filament sensor
    SET_Z_THERMAL_ADJUST ENABLE=1                                   ;Compensate for themal changes, so onle the default bed mesh needs to be used
    NEVERMORE_OFF
####
#Start heating up and home/QGL the printer
#####
    M104 S{150}                                                     ;start heating extruder to 150 and move on
    M140 S{BED}                                                     ;start heating the bed to temp and move on
    G32    ;HOME THE SYSTEM
#####
#Heating
#####
    M190 S{BED}                                                     ;heat bed to required temp, and wait for bed to get to temp    SET_CHAMBER_MIN S={CHAMBER} MATERIAL={material}                                    ;wait for the chamber to heat
    # {% if material == "PLA" or material == "PETG" %}
    #    {action_respond_info("Heating Chamber not needed for: %s" % (material))}
    # {% elif material == "ABS" or material == "ASA" or material == "PA6" material == "PACF" %}
    #    {action_respond_info("Heating Chamber for: %s" % (material))}
    #    HEATSOAK_CHAMBER TEMP={CHAMBER} 
    # {% else %}
    #   {action_respond_info("Unknown material: %s...\n" 
    #                        "not heating chamber better safe than sorry"% (material))}
    # {% endif %}
    HEATSOAK_CHAMBER TEMP={CHAMBER} MATERIAL="{material}"
    STATUS_READY
#####
#homing and cleaning the nozzle
#clean nozzle twice - first time to make sure we get to the brush. Second time to reset z after cleaning the brush
#####
    G28 Z
    CLEAN_NOZZLE
    G1 Z30 F18000                                                   ;move up in z to clear the nozzle brush
    G32                                                             ;home and
    QUAD_GANTRY_LEVEL                                               ;QGL after nozzle brush to get good leveling
#####
#Determine z-offset and bed mesh
##### 
    STATUS_MESHING
    ADAPTIVE_BED_MESH SIZE={FL_SIZE}                                ;runs an adaptive bed mesh (KAMP)
#####
#Set pressure advance and z-offset
#####
   SET_GCODE_OFFSET Z_ADJUST={Z_ADJUST} MOVE=1
   _ADJUST_PRESSURE_ADVANCE FILAMENT="{filament}" NOZZLE={nozzle} MATERIAL="{material}"
#####
#Clean the nozzle
##### 
    STATUS_CLEANING
    CLEAN_NOZZLE                                                    ;make sure nozzle is clean from ooze before printing
#####
#Prime the nozzle and start print
#####  
    G1 X5 Y10 F18000                                                ;Alternate location for brush buck: G1 X5 Y10 F18000
    M109 S{EXTRUDER}                                                ;added his here to make sure extruder temp is up before print
    STATUS_PRINTING
    ADAPTIVE_PURGE
    M83                                                             ;use relative distance for extruder
#####
#set filament sensor
#####
#    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1            ; use to add a filimant motion or a filament run-out sensor.
    M117 Printing...
    M118 Printing...



###########################################################################################################################
#   PRINT_END
###########################################################################################################################
[gcode_macro PRINT_END]
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                                                            ; wait for buffer to clear
    G92 E0                                                          ; zero the extruder
    G1 E-5.0 F1800                                                  ; retract filament
    
    TURN_OFF_HEATERS

    
    G90                                                               ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000                         ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600       ; park nozzle at rear
    M107                                                            ; turn off fan -- Which Fan?
    #Turn of Case Lights?
    #Turn off neopixles?
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END